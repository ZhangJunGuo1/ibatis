org.quartz.scheduler.instanceName = DefaultQuartzScheduler
org.quartz.threadPool.class = org.quartz.simpl.SimpleThreadPool
org.quartz.threadPool.threadCount = 10
org.quartz.threadPool.threadPriority = 5
org.quartz.threadPool.threadsInheritContextClassLoaderOfInitializingThread = true
org.quartz.jobStore.misfireThreshold = 60000
org.quartz.jobStore.class = org.quartz.impl.jdbcjobstore.JobStoreTX
# 数据表前缀
org.quartz.jobStore.tablePrefix = QRTZ_ 
#org.quartz.jobStore.isClustered = false
# ------------------------使用JDBCJobStore配置
# 配置数据源的名称，在后面配置数据源的时候要用到，例如org.quartz.dataSource.clusterDS.driver = com.mysql.jdbc.Driver
org.quartz.jobStore.dataSource = myDS
#============================================================================
# Configure Datasources 数据源
#============================================================================
# 数据库驱动
org.quartz.dataSource.myDS.driver =com.mysql.cj.jdbc.Driver
# 数据库连接地址
org.quartz.dataSource.myDS.URL =jdbc:mysql://localhost:3306/test?serverTimezone=UTC&&allowMultiQueries=true
# 数据库用户名
org.quartz.dataSource.myDS.user =root
# 数据库密码
org.quartz.dataSource.myDS.password =123456a?
#配置job调度插件  quartz_jobs(jobs and triggers内容)的XML文档
#加载 Job 和 Trigger 信息的类   （1.8之前用：org.quartz.plugins.xml.JobInitializationPlugin）
org.quartz.plugin.jobInitializer.class = org.quartz.plugins.xml.XMLSchedulingDataProcessorPlugin  
#指定存放调度器(Job 和 Trigger)信息的xml文件，默认是classpath下quartz_data.xml
org.quartz.plugin.jobInitializer.fileNames =quartz_jobs.xml
#自动扫描任务单并发现改动的时间间隔,单位为秒
#org.quartz.plugin.jobInitializer.scanInterval = 10
#覆盖任务调度器中同名的jobDetail,避免只修改了CronExpression所造成的不能重新生效情况
org.quartz.plugin.jobInitializer.wrapInUserTransaction = false


